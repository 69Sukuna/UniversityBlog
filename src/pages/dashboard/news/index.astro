---
import Layout from '../../../layouts/Layout.astro';
import Button from '../../../components/ui/Button.astro';
import Alert from '../../../components/ui/Alert.astro';
import { getUserFromRequest } from '../../../utils/session';
import { requireRole } from '../../../utils/auth';
import { db, News, eq} from 'astro:db';

const user = getUserFromRequest(Astro.request);

if (!user || !requireRole(user, ['user'])) {
  return Astro.redirect('/login');
}

// Obtener todas las noticias
const noticias = await db.select().from(News).where(eq(News.userId, user.id));

// Mensajes de la URL
const urlParams = new URLSearchParams(new URL(Astro.request.url).search);
const message = urlParams.get('message');
const error = urlParams.get('error');
---

<Layout title="Gestión de Noticias - Admin">
  <div class="min-h-screen bg-gray-50">
    <!-- Header -->
    <div class="bg-white shadow">
      <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <div class="flex justify-between items-center py-6">
          <div>
            <h1 class="text-3xl font-bold text-gray-900">Gestión de Noticias</h1>
            <p class="mt-2 text-sm text-gray-600">Administra todas las noticias del sistema</p>
          </div>
          <div class="flex space-x-3">
            <Button href="/admin" variant="secondary">← Volver al Panel</Button>
            <Button href="/dashboard/news/create" variant="primary">+ Nueva Noticia</Button>
          </div>
        </div>
      </div>
    </div>

    <main class="max-w-7xl mx-auto py-6 sm:px-6 lg:px-8">
      <div class="px-4 py-6 sm:px-0">
        {
          message && (
            <Alert type="success" class="mb-6">
              {message === 'created' && 'Noticia creada exitosamente'}
              {message === 'updated' && 'Noticia actualizada exitosamente'}
              {message === 'deleted' && 'Noticia eliminada exitosamente'}
            </Alert>
          )
        }

        {
          error && (
            <Alert type="error" class="mb-6">
              {error === 'delete_failed' && 'Error al eliminar la noticia'}
              {error === 'not_found' && 'Noticia no encontrada'}
            </Alert>
          )
        }

        <!-- Tabla de Noticias -->
        <div class="bg-white shadow overflow-hidden sm:rounded-md">
          <div class="px-4 py-5 sm:px-6 border-b border-gray-200">
            <h3 class="text-lg leading-6 font-medium text-gray-900">
              Lista de Noticias ({noticias.length})
            </h3>
          </div>

          {
            noticias.length === 0 ? (
              <div class="text-center py-12">
                <svg
                  class="mx-auto h-12 w-12 text-gray-400"
                  fill="none"
                  viewBox="0 0 24 24"
                  stroke="currentColor"
                >
                  <path
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="2"
                    d="M12 4.354a4 4 0 110 5.292M15 21H3v-1a6 6 0 0112 0v1zm0 0h6v-1a6 6 0 00-9-5.197m13.5-9a2.5 2.5 0 11-5 0 2.5 2.5 0 015 0z"
                  />
                </svg>
                <h3 class="mt-2 text-sm font-medium text-gray-900">No hay noticias</h3>
                <p class="mt-1 text-sm text-gray-500">Comienza creando una nueva noticia.</p>
                <div class="mt-6">
                  <Button href="/dashboard/news/create" variant="primary">
                    + Crear Noticia
                  </Button>
                </div>
              </div>
            ) : (
              <ul class="divide-y divide-gray-200">
                {noticias.map((noticia) => (
                  <li class="px-4 py-4 sm:px-6">
                    <div class="flex items-center justify-between">
                      <div class="flex-1 min-w-0">
                        <div class="flex items-center justify-between">
                          <p class="text-sm font-medium text-gray-900 truncate">
                            {noticia.titulo}
                          </p>
                          <p class="text-sm text-gray-500">
                            {new Date(noticia.fecha).toLocaleDateString()}
                          </p>
                        </div>
                        <p class="mt-1 text-sm text-gray-500 truncate">
                          {noticia.contenido.slice(0, 100)}...
                        </p>
                      </div>
                      <div class="flex items-center space-x-2 ml-4">
                        <Button
                          href={`/dashboard/news/${noticia.id}/edit`}
                          variant="outline"
                          size="sm"
                        >
                          Editar
                        </Button>
                        <form action="/dashboard/api/news/delete" method="POST" class="inline">
                          <input type="hidden" name="newsId" value={noticia.id} />
                          <button
                            type="submit"
                            onclick="return confirm('¿Estás seguro de eliminar esta noticia?')"
                            class="inline-flex items-center px-3 py-2 border border-red-300 text-sm leading-4 font-medium rounded-md text-red-700 bg-white hover:bg-red-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500"
                          >
                            Eliminar
                          </button>
                        </form>
                      </div>
                    </div>
                  </li>
                ))}
              </ul>
            )
          }
        </div>
      </div>
    </main>
  </div>
</Layout>
