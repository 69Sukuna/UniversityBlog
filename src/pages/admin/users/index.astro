
---
import Layout from '../../../layouts/Layout.astro';
import Button from '../../../components/ui/Button.astro';
import Alert from '../../../components/ui/Alert.astro';
import { getUserFromRequest } from '../../../utils/session';
import { requireRole } from '../../../utils/auth';
import { db, Usuarios, News, Soces } from 'astro:db';

const user = getUserFromRequest(Astro.request);

if (!user || !requireRole(user, ['admin'])) {
  return Astro.redirect('/login');
}

const usuarios = await db.select().from(Usuarios);
const noticias = await db.select().from(News);
const soces = await db.select().from(Soces);
const totalUsuarios = usuarios.length;
const totalNoticias = noticias.length;
const totalSoces = soces.length;

// Crear map para mejor rendimiento
const socesMap = new Map(soces.map(s => [s.id, s.nombre]));

// Contar usuarios por rol
const usuariosPorRol = {
  admin: usuarios.filter(u => u.role === 'admin').length,
  user: usuarios.filter(u => u.role === 'user').length
};

// Obtener mensajes de la URL
const urlParams = new URLSearchParams(new URL(Astro.request.url).search);
const message = urlParams.get('message');
const error = urlParams.get('error');

// Función para obtener iniciales
const getInitials = (nombre: string) => {
  if (!nombre || typeof nombre !== 'string') return '?';
  return nombre.trim().split(' ').map(n => n.charAt(0)).join('').toUpperCase() || '?';
};

// Función para obtener color del avatar basado en el nombre
const getAvatarColor = (nombre: string) => {
  const colors = [
    'bg-red-500', 'bg-blue-500', 'bg-green-500', 'bg-yellow-500', 
    'bg-purple-500', 'bg-pink-500', 'bg-indigo-500', 'bg-teal-500'
  ];
  if (!nombre || typeof nombre !== 'string') return colors[0];
  const index = nombre.charCodeAt(0) % colors.length;
  return colors[index];
};
---

<Layout title="Gestión de Usuarios - Admin">
  <div class="min-h-screen bg-gray-50">
    <!-- Header -->
    <div class="bg-white shadow">
      <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <div class="flex justify-between items-center py-6">
          <div>
            <h1 class="text-3xl font-bold text-gray-900">Gestión de Usuarios</h1>
            <p class="mt-2 text-sm text-gray-600">Administra todos los usuarios del sistema</p>
          </div>
          <div class="flex space-x-3">
            <Button href="/admin" variant="secondary">← Volver al Panel</Button>
            <Button href="/admin/users/create" variant="primary">+ Nuevo Usuario</Button>
          </div>
        </div>
      </div>
    </div>

    <!-- Content -->
    <main class="max-w-7xl mx-auto py-6 sm:px-6 lg:px-8">
      <div class="px-4 py-6 sm:px-0">

        {message && (
          <Alert type="success" class="mb-6">
            {message === 'created' && 'Usuario creado exitosamente'}
            {message === 'updated' && 'Usuario actualizado exitosamente'}
            {message === 'deleted' && 'Usuario eliminado exitosamente'}
          </Alert>
        )}

        {error && (
          <Alert type="error" class="mb-6">
            {error === 'delete_failed' && 'Error al eliminar usuario'}
            {error === 'not_found' && 'Usuario no encontrado'}
          </Alert>
        )}

        <!-- Stats Cards -->
        <div class="grid grid-cols-1 md:grid-cols-4 gap-6 mb-8">
          <!-- Total Usuarios -->
          <div class="bg-white overflow-hidden shadow rounded-lg border-l-4 border-blue-500">
            <div class="p-5">
              <div class="flex items-center">
                <div class="flex-shrink-0">
                  <div class="w-8 h-8 bg-blue-100 rounded-full flex items-center justify-center">
                    <svg class="w-5 h-5 text-blue-600" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 20h5v-2a3 3 0 00-5.356-1.857M17 20H7m10 0v-2c0-.656-.126-1.283-.356-1.857M7 20H2v-2a3 3 0 015.356-1.857M7 20v-2c0-.656.126-1.283.356-1.857m0 0a5.002 5.002 0 019.288 0M15 7a3 3 0 11-6 0 3 3 0 016 0zm6 3a2 2 0 11-4 0 2 2 0 014 0zM7 10a2 2 0 11-4 0 2 2 0 014 0z" />
                    </svg>
                  </div>
                </div>
                <div class="ml-5 w-0 flex-1">
                  <dl>
                    <dt class="text-sm font-medium text-gray-500 truncate">Total Usuarios</dt>
                    <dd class="text-2xl font-bold text-gray-900">{totalUsuarios}</dd>
                  </dl>
                </div>
              </div>
            </div>
          </div>

          <!-- Administradores -->
          <div class="bg-white overflow-hidden shadow rounded-lg border-l-4 border-purple-500">
            <div class="p-5">
              <div class="flex items-center">
                <div class="flex-shrink-0">
                  <div class="w-8 h-8 bg-purple-100 rounded-full flex items-center justify-center">
                    <svg class="w-5 h-5 text-purple-600" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m5.618-4.016A11.955 11.955 0 0112 2.944a11.955 11.955 0 01-8.618 3.04A12.02 12.02 0 003 9c0 5.591 3.824 10.29 9 11.622 5.176-1.332 9-6.03 9-11.622 0-1.042-.133-2.052-.382-3.016z" />
                    </svg>
                  </div>
                </div>
                <div class="ml-5 w-0 flex-1">
                  <dl>
                    <dt class="text-sm font-medium text-gray-500 truncate">Administradores</dt>
                    <dd class="text-2xl font-bold text-gray-900">{usuariosPorRol.admin}</dd>
                  </dl>
                </div>
              </div>
            </div>
          </div>

          <!-- Usuarios Regulares -->
          <div class="bg-white overflow-hidden shadow rounded-lg border-l-4 border-green-500">
            <div class="p-5">
              <div class="flex items-center">
                <div class="flex-shrink-0">
                  <div class="w-8 h-8 bg-green-100 rounded-full flex items-center justify-center">
                    <svg class="w-5 h-5 text-green-600" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z" />
                    </svg>
                  </div>
                </div>
                <div class="ml-5 w-0 flex-1">
                  <dl>
                    <dt class="text-sm font-medium text-gray-500 truncate">Usuarios Regulares</dt>
                    <dd class="text-2xl font-bold text-gray-900">{usuariosPorRol.user}</dd>
                  </dl>
                </div>
              </div>
            </div>
          </div>

          <!-- Sociedades Activas -->
          <div class="bg-white overflow-hidden shadow rounded-lg border-l-4 border-orange-500">
            <div class="p-5">
              <div class="flex items-center">
                <div class="flex-shrink-0">
                  <div class="w-8 h-8 bg-orange-100 rounded-full flex items-center justify-center">
                    <svg class="w-5 h-5 text-orange-600" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-4m-5 0H9m0 0H5m0 0h2M7 7h10M7 11h10M7 15h10" />
                    </svg>
                  </div>
                </div>
                <div class="ml-5 w-0 flex-1">
                  <dl>
                    <dt class="text-sm font-medium text-gray-500 truncate">Sociedades</dt>
                    <dd class="text-2xl font-bold text-gray-900">{totalSoces}</dd>
                  </dl>
                </div>
              </div>
            </div>
          </div>
        </div>
        
        <!-- Controles de filtrado y búsqueda -->
        <div class="bg-white p-6 rounded-lg shadow mb-6">
          <div class="flex flex-col lg:flex-row lg:items-center lg:justify-between space-y-4 lg:space-y-0 lg:space-x-4">
            <!-- Búsqueda -->
            <div class="flex-1 max-w-lg">
              <label for="busqueda" class="block text-sm font-medium text-gray-700 mb-2">Buscar usuario</label>
              <div class="relative">
                <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                  <svg class="h-5 w-5 text-gray-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z" />
                  </svg>
                </div>
                <input
                  id="busqueda"
                  type="text"
                  placeholder="Buscar por nombre, correo o sociedad..."
                  class="pl-10 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm"
                />
              </div>
            </div>

            <!-- Filtros -->
            <div class="flex space-x-4">
              <div>
                <label for="filtro-rol" class="block text-sm font-medium text-gray-700 mb-2">Filtrar por rol</label>
                <select id="filtro-rol" class="block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm">
                  <option value="">Todos los roles</option>
                  <option value="admin">Administradores</option>
                  <option value="user">Usuarios</option>
                </select>
              </div>

              <div>
                <label for="filtro-sociedad" class="block text-sm font-medium text-gray-700 mb-2">Filtrar por sociedad</label>
                <select id="filtro-sociedad" class="block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm">
                  <option value="">Todas las sociedades</option>
                  {Array.from(socesMap.values()).map(sociedad => (
                    <option value={sociedad}>{sociedad}</option>
                  ))}
                  <option value="sin-asignar">Sin asignar</option>
                </select>
              </div>
            </div>
          </div>
        </div>

        <!-- Vista de usuarios mejorada -->
        <div class="bg-white shadow overflow-hidden sm:rounded-md">
          <div class="px-4 py-5 sm:px-6 border-b border-gray-200 flex justify-between items-center">
            <div>
              <h3 class="text-lg leading-6 font-medium text-gray-900">
                Lista de Usuarios
              </h3>
              <p class="mt-1 text-sm text-gray-500">
                <span id="usuarios-mostrados">{totalUsuarios}</span> de {totalUsuarios} usuarios
              </p>
            </div>
            
            <!-- Toggle de vista -->
            <div class="flex items-center space-x-2">
              <span class="text-sm text-gray-500">Vista:</span>
              <button id="vista-lista" class="p-2 rounded-md bg-blue-100 text-blue-600">
                <svg class="w-4 h-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 10h16M4 14h16M4 18h16" />
                </svg>
              </button>
              <button id="vista-tarjetas" class="p-2 rounded-md text-gray-400 hover:bg-gray-100">
                <svg class="w-4 h-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2H6a2 2 0 01-2-2V6zM14 6a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2h-2a2 2 0 01-2-2V6zM4 16a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2H6a2 2 0 01-2-2v-2zM14 16a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2h-2a2 2 0 01-2-2v-2z" />
                </svg>
              </button>
            </div>
          </div>

          {usuarios.length === 0 ? (
            <div class="text-center py-12">
              <svg
                class="mx-auto h-12 w-12 text-gray-400"
                fill="none"
                viewBox="0 0 24 24"
                stroke="currentColor"
              >
                <path
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  stroke-width="2"
                  d="M12 4.354a4 4 0 110 5.292M15 21H3v-1a6 6 0 0112 0v1zm0 0h6v-1a6 6 0 00-9-5.197m13.5-9a2.5 2.5 0 11-5 0 2.5 2.5 0 015 0z"
                />
              </svg>
              <h3 class="mt-2 text-sm font-medium text-gray-900">No hay usuarios</h3>
              <p class="mt-1 text-sm text-gray-500">Comienza creando un nuevo usuario.</p>
              <div class="mt-6">
                <Button href="/admin/users/create" variant="primary">+ Crear Usuario</Button>
              </div>
            </div>
          ) : (
            <>
              <!-- Vista de Lista -->
              <ul class="divide-y divide-gray-200" id="lista-usuarios">
                {usuarios.map((usuario) => (
                  <li class="usuario-item px-4 py-6 hover:bg-gray-50 transition-colors duration-150" 
                      data-role={usuario.role}
                      data-sociedad={socesMap.get(usuario.socesId) ?? 'sin-asignar'}>
                    <div class="flex items-center justify-between">
                      <div class="flex items-center space-x-4 flex-1">
                        <!-- Avatar mejorado -->
                        <div class="flex-shrink-0">
                          <div class={`h-12 w-12 rounded-full ${
                            (() => {
                              const colors = ['bg-red-500', 'bg-blue-500', 'bg-green-500', 'bg-yellow-500', 'bg-purple-500', 'bg-pink-500', 'bg-indigo-500', 'bg-teal-500'];
                              if (!usuario.nombre || typeof usuario.nombre !== 'string') return colors[0];
                              return colors[usuario.nombre.charCodeAt(0) % colors.length];
                            })()
                          } flex items-center justify-center text-white font-semibold text-sm shadow-md`}>
                            {(() => {
                              if (!usuario.nombre || typeof usuario.nombre !== 'string') return '?';
                              return usuario.nombre.trim().split(' ').map(n => n.charAt(0)).join('').toUpperCase() || '?';
                            })()}
                          </div>
                        </div>
                        
                        <!-- Información del usuario -->
                        <div class="flex-1 min-w-0">
                          <div class="flex items-center space-x-3 mb-1">
                            <p class="text-lg font-semibold text-gray-900 truncate">
                              {usuario.nombre}
                            </p>
                            <span class={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${
                              usuario.role === 'admin'
                                ? 'bg-purple-100 text-purple-800'
                                : 'bg-blue-100 text-blue-800'
                            }`}>
                              {usuario.role === 'admin' ? '👑 Admin' : '👤 Usuario'}
                            </span>
                            {usuario.id === user.id && (
                              <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-green-100 text-green-800">
                                Tú
                              </span>
                            )}
                          </div>
                          
                          <div class="grid grid-cols-1 md:grid-cols-3 gap-2 text-sm text-gray-600">
                            <div class="flex items-center">
                              <svg class="w-4 h-4 mr-2 text-gray-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 12a4 4 0 10-8 0 4 4 0 008 0zm0 0v1.5a2.5 2.5 0 005 0V12a9 9 0 10-9 9m4.5-1.206a8.959 8.959 0 01-4.5 1.207" />
                              </svg>
                              <span class="truncate">{usuario.correo}</span>
                            </div>
                            <div class="flex items-center">
                              <svg class="w-4 h-4 mr-2 text-gray-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z" />
                              </svg>
                              <span class="truncate">@{usuario.userName}</span>
                            </div>
                            <div class="flex items-center">
                              <svg class="w-4 h-4 mr-2 text-gray-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-4m-5 0H9m0 0H5m0 0h2M7 7h10M7 11h10M7 15h10" />
                              </svg>
                              <span class="truncate font-medium text-gray-900">
                                {socesMap.get(usuario.socesId) ?? 'No asignado'}
                              </span>
                            </div>
                          </div>
                        </div>
                      </div>
                      
                      <!-- Acciones -->
                      <div class="flex items-center space-x-3 ml-4">
                        <Button href={`/admin/users/${usuario.id}`} variant="outline" size="sm">
                          <svg class="w-4 h-4 mr-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z" />
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z" />
                          </svg>
                          Ver
                        </Button>
                        <Button href={`/admin/users/${usuario.id}/edit`} variant="outline" size="sm">
                          <svg class="w-4 h-4 mr-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z" />
                          </svg>
                          Editar
                        </Button>
                        {usuario.id !== user.id && (
                          <form action="/api/admin/users/delete" method="POST" class="inline">
                            <input type="hidden" name="userId" value={usuario.id} />
                            <button
                              type="submit"
                              onclick="return confirm('¿Estás seguro de eliminar este usuario? Esta acción no se puede deshacer.')"
                              class="inline-flex items-center px-3 py-2 border border-red-300 text-sm leading-4 font-medium rounded-md text-red-700 bg-white hover:bg-red-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500 transition-colors duration-150"
                            >
                              <svg class="w-4 h-4 mr-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16" />
                              </svg>
                              Eliminar
                            </button>
                          </form>
                        )}
                      </div>
                    </div>
                  </li>
                ))}
              </ul>

              <!-- Vista de Tarjetas (inicialmente oculta) -->
              <div class="hidden grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 p-6" id="tarjetas-usuarios">
                {usuarios.map((usuario) => (
                  <div class="usuario-card bg-white border border-gray-200 rounded-lg p-6 hover:shadow-lg transition-shadow duration-150"
                       data-role={usuario.role}
                       data-sociedad={socesMap.get(usuario.socesId) ?? 'sin-asignar'}>
                    <!-- Header de la tarjeta -->
                    <div class="flex items-center space-x-4 mb-4">
                      <div class={`h-16 w-16 rounded-full ${
                        (() => {
                          const colors = ['bg-red-500', 'bg-blue-500', 'bg-green-500', 'bg-yellow-500', 'bg-purple-500', 'bg-pink-500', 'bg-indigo-500', 'bg-teal-500'];
                          if (!usuario.nombre || typeof usuario.nombre !== 'string') return colors[0];
                          return colors[usuario.nombre.charCodeAt(0) % colors.length];
                        })()
                      } flex items-center justify-center text-white font-bold text-lg shadow-md`}>
                        {(() => {
                          if (!usuario.nombre || typeof usuario.nombre !== 'string') return '?';
                          return usuario.nombre.trim().split(' ').map(n => n.charAt(0)).join('').toUpperCase() || '?';
                        })()}
                      </div>
                      <div class="flex-1">
                        <h3 class="text-lg font-semibold text-gray-900">{usuario.nombre}</h3>
                        <div class="flex items-center space-x-2 mt-1">
                          <span class={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${
                            usuario.role === 'admin'
                              ? 'bg-purple-100 text-purple-800'
                              : 'bg-blue-100 text-blue-800'
                          }`}>
                            {usuario.role === 'admin' ? '👑 Admin' : '👤 Usuario'}
                          </span>
                          {usuario.id === user.id && (
                            <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-green-100 text-green-800">
                              Tú
                            </span>
                          )}
                        </div>
                      </div>
                    </div>

                    <!-- Información -->
                    <div class="space-y-3 mb-6">
                      <div class="flex items-center text-sm text-gray-600">
                        <svg class="w-4 h-4 mr-3 text-gray-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 12a4 4 0 10-8 0 4 4 0 008 0zm0 0v1.5a2.5 2.5 0 005 0V12a9 9 0 10-9 9m4.5-1.206a8.959 8.959 0 01-4.5 1.207" />
                        </svg>
                        <span class="truncate">{usuario.correo}</span>
                      </div>
                      <div class="flex items-center text-sm text-gray-600">
                        <svg class="w-4 h-4 mr-3 text-gray-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z" />
                        </svg>
                        <span>@{usuario.userName}</span>
                      </div>
                      <div class="flex items-center text-sm">
                        <svg class="w-4 h-4 mr-3 text-gray-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-4m-5 0H9m0 0H5m0 0h2M7 7h10M7 11h10M7 15h10" />
                        </svg>
                        <span class="font-medium text-gray-900">
                          {socesMap.get(usuario.socesId) ?? 'No asignado'}
                        </span>
                      </div>
                    </div>

                    <!-- Acciones -->
                    <div class="flex space-x-2">
                      <Button href={`/admin/users/${usuario.id}`} variant="outline" size="sm" class="flex-1">
                        Ver
                      </Button>
                      <Button href={`/admin/users/${usuario.id}/edit`} variant="outline" size="sm" class="flex-1">
                        Editar
                      </Button>
                      {usuario.id !== user.id && (
                        <form action="/api/admin/users/delete" method="POST" class="inline">
                          <input type="hidden" name="userId" value={usuario.id} />
                          <button
                            type="submit"
                            onclick="return confirm('¿Estás seguro de eliminar este usuario?')"
                            class="px-2 py-1 border border-red-300 text-xs font-medium rounded text-red-700 bg-white hover:bg-red-50 focus:outline-none focus:ring-1 focus:ring-red-500"
                          >
                            🗑️
                          </button>
                        </form>
                      )}
                    </div>
                  </div>
                ))}
              </div>
            </>
          )}
        </div>

        <!-- Paginación (opcional) -->
        <div class="bg-white px-4 py-3 flex items-center justify-between border-t border-gray-200 sm:px-6 mt-6 rounded-lg shadow">
          <div class="flex-1 flex justify-between sm:hidden">
            <button class="relative inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50">
              Anterior
            </button>
            <button class="ml-3 relative inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50">
              Siguiente
            </button>
          </div>
          <div class="hidden sm:flex-1 sm:flex sm:items-center sm:justify-between">
            <div>
              <p class="text-sm text-gray-700">
                Mostrando <span class="font-medium" id="desde">1</span> a <span class="font-medium" id="hasta">{Math.min(20, totalUsuarios)}</span> de{' '}
                <span class="font-medium">{totalUsuarios}</span> resultados
              </p>
            </div>
            <div>
              <nav class="relative z-0 inline-flex rounded-md shadow-sm -space-x-px" aria-label="Pagination">
                <button class="relative inline-flex items-center px-2 py-2 rounded-l-md border border-gray-300 bg-white text-sm font-medium text-gray-500 hover:bg-gray-50">
                  <span class="sr-only">Anterior</span>
                  <svg class="h-5 w-5" fill="currentColor" viewBox="0 0 20 20">
                    <path fill-rule="evenodd" d="M12.707 5.293a1 1 0 010 1.414L9.414 10l3.293 3.293a1 1 0 01-1.414 1.414l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 0z" clip-rule="evenodd" />
                  </svg>
                </button>
                <button class="relative inline-flex items-center px-4 py-2 border border-gray-300 bg-white text-sm font-medium text-gray-700 hover:bg-gray-50">
                  1
                </button>
                <button class="relative inline-flex items-center px-2 py-2 rounded-r-md border border-gray-300 bg-white text-sm font-medium text-gray-500 hover:bg-gray-50">
                  <span class="sr-only">Siguiente</span>
                  <svg class="h-5 w-5" fill="currentColor" viewBox="0 0 20 20">
                    <path fill-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" clip-rule="evenodd" />
                  </svg>
                </button>
              </nav>
            </div>
          </div>
        </div>

      </div>
    </main>
  </div>

  <!-- Script mejorado para funcionalidad interactiva -->
  <script type="module" is:inline>
    const busqueda = document.getElementById('busqueda');
    const filtroRol = document.getElementById('filtro-rol');
    const filtroSociedad = document.getElementById('filtro-sociedad');
    const listaUsuarios = document.getElementById('lista-usuarios');
    const tarjetasUsuarios = document.getElementById('tarjetas-usuarios');
    const vistaLista = document.getElementById('vista-lista');
    const vistaTarjetas = document.getElementById('vista-tarjetas');
    const usuariosMostrados = document.getElementById('usuarios-mostrados');

    let vistaActual = 'lista';

    // Función para aplicar todos los filtros
    function aplicarFiltros() {
      const textoBusqueda = busqueda.value.toLowerCase();
      const rolSeleccionado = filtroRol.value;
      const sociedadSeleccionada = filtroSociedad.value;

      const contenedorActual = vistaActual === 'lista' ? listaUsuarios : tarjetasUsuarios;
      const items = contenedorActual.querySelectorAll(vistaActual === 'lista' ? '.usuario-item' : '.usuario-card');
      
      let contadorVisible = 0;

      items.forEach(item => {
        const textoCompleto = item.textContent.toLowerCase();
        const rol = item.dataset.role;
        const sociedad = item.dataset.sociedad;

        const coincideBusqueda = textoCompleto.includes(textoBusqueda);
        const coincidenRol = !rolSeleccionado || rol === rolSeleccionado;
        const coincideSociedad = !sociedadSeleccionada || sociedad === sociedadSeleccionada;

        const visible = coincideBusqueda && coincidenRol && coincideSociedad;
        
        item.style.display = visible ? '' : 'none';
        if (visible) contadorVisible++;
      });

      usuariosMostrados.textContent = contadorVisible;
    }

    // Función para cambiar vista
    function cambiarVista(nuevaVista) {
      if (nuevaVista === vistaActual) return;

      vistaActual = nuevaVista;

      if (nuevaVista === 'lista') {
        listaUsuarios.classList.remove('hidden');
        tarjetasUsuarios.classList.add('hidden');
        vistaLista.classList.add('bg-blue-100', 'text-blue-600');
        vistaLista.classList.remove('text-gray-400', 'hover:bg-gray-100');
        vistaTarjetas.classList.remove('bg-blue-100', 'text-blue-600');
        vistaTarjetas.classList.add('text-gray-400', 'hover:bg-gray-100');
      } else {
        listaUsuarios.classList.add('hidden');
        tarjetasUsuarios.classList.remove('hidden');
        tarjetasUsuarios.classList.add('grid');
        vistaTarjetas.classList.add('bg-blue-100', 'text-blue-600');
        vistaTarjetas.classList.remove('text-gray-400', 'hover:bg-gray-100');
        vistaLista.classList.remove('bg-blue-100', 'text-blue-600');
        vistaLista.classList.add('text-gray-400', 'hover:bg-gray-100');
      }

      aplicarFiltros();
    }

    // Event listeners
    busqueda?.addEventListener('input', aplicarFiltros);
    filtroRol?.addEventListener('change', aplicarFiltros);
    filtroSociedad?.addEventListener('change', aplicarFiltros);
    
    vistaLista?.addEventListener('click', () => cambiarVista('lista'));
    vistaTarjetas?.addEventListener('click', () => cambiarVista('tarjetas'));

    // Mejorar confirmación de eliminación
    document.querySelectorAll('form[action="/api/admin/users/delete"]').forEach(form => {
      form.addEventListener('submit', function(e) {
        const userName = this.closest('li, .usuario-card').querySelector('h3, p').textContent.trim();
        if (!confirm(`¿Estás seguro de eliminar al usuario "${userName}"?\n\nEsta acción no se puede deshacer y eliminará todos los datos asociados.`)) {
          e.preventDefault();
        }
      });
    });

    // Keyboard shortcuts
    document.addEventListener('keydown', function(e) {
      // Ctrl/Cmd + K para enfocar búsqueda
      if ((e.ctrlKey || e.metaKey) && e.key === 'k') {
        e.preventDefault();
        busqueda?.focus();
      }
      
      // Ctrl/Cmd + 1/2 para cambiar vista
      if ((e.ctrlKey || e.metaKey) && e.key === '1') {
        e.preventDefault();
        cambiarVista('lista');
      }
      if ((e.ctrlKey || e.metaKey) && e.key === '2') {
        e.preventDefault();
        cambiarVista('tarjetas');
      }
    });

    // Mostrar atajos de teclado al usuario
    console.log('Atajos de teclado disponibles:');
    console.log('Ctrl/Cmd + K: Enfocar búsqueda');
    console.log('Ctrl/Cmd + 1: Vista de lista');
    console.log('Ctrl/Cmd + 2: Vista de tarjetas');
  </script>

  <!-- Estilos adicionales -->
  <style>
    .usuario-item:hover {
      transform: translateY(-1px);
      box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);
    }
    
    .usuario-card:hover {
      transform: translateY(-2px);
    }
    
    .transition-all {
      transition: all 0.15s ease-in-out;
    }

    /* Animación para el avatar */
    .usuario-item .rounded-full,
    .usuario-card .rounded-full {
      transition: transform 0.15s ease-in-out;
    }
    
    .usuario-item:hover .rounded-full,
    .usuario-card:hover .rounded-full {
      transform: scale(1.05);
    }

    /* Mejorar el focus de los inputs */
    input:focus, select:focus {
      box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);
    }
  </style>
</Layout>
