---
import Layout from '../../../layouts/Layout.astro';
import Button from '../../../components/ui/Button.astro';
import Alert from '../../../components/ui/Alert.astro';
import { getUserFromRequest } from '../../../utils/session';
import { requireRole } from '../../../utils/auth';
import { db, Usuarios, News, Soces } from 'astro:db';

const user = getUserFromRequest(Astro.request);

if (!user || !requireRole(user, ['admin'])) {
  return Astro.redirect('/login');
}

const usuarios = await db.select().from(Usuarios);
const noticias = await db.select().from(News);
const soces = await db.select().from(Soces);
const totalUsuarios = usuarios.length;
const totalNoticias = noticias.length;
const totalSoces = soces.length;

// Crear map para mejor rendimiento
const socesMap = new Map(soces.map(s => [s.id, s.nombre]));

// Contar usuarios por rol
const usuariosPorRol = {
  admin: usuarios.filter(u => u.role === 'admin').length,
  user: usuarios.filter(u => u.role === 'user').length
};

// Obtener mensajes de la URL
const urlParams = new URLSearchParams(new URL(Astro.request.url).search);
const message = urlParams.get('message');
const error = urlParams.get('error');
---

<Layout title="Gestión de Usuarios - Admin">
  <div class="min-h-screen bg-gray-50">
    <!-- Header -->
    <div class="bg-white shadow">
      <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <div class="flex justify-between items-center py-6">
          <div>
            <h1 class="text-3xl font-bold text-gray-900">Gestión de Usuarios</h1>
            <p class="mt-2 text-sm text-gray-600">Administra todos los usuarios del sistema</p>
          </div>
          <div class="flex space-x-3">
            <Button href="/admin" variant="secondary">← Volver al Panel</Button>
            <Button href="/admin/users/create" variant="primary">+ Nuevo Usuario</Button>
          </div>
        </div>
      </div>
    </div>

    <!-- Content -->
    <main class="max-w-7xl mx-auto py-6 sm:px-6 lg:px-8">
      <div class="px-4 py-6 sm:px-0">

        {message && (
          <Alert type="success" class="mb-6">
            {message === 'created' && 'Usuario creado exitosamente'}
            {message === 'updated' && 'Usuario actualizado exitosamente'}
            {message === 'deleted' && 'Usuario eliminado exitosamente'}
          </Alert>
        )}

        {error && (
          <Alert type="error" class="mb-6">
            {error === 'delete_failed' && 'Error al eliminar usuario'}
            {error === 'not_found' && 'Usuario no encontrado'}
          </Alert>
        )}

        <!-- Stats Cards -->
        <div class="grid grid-cols-1 md:grid-cols-3 gap-6 mb-8">
          <!-- Total Usuarios -->
          <div class="bg-white overflow-hidden shadow rounded-lg">
            <div class="p-5">
              <div class="flex items-center">
                <div class="flex-shrink-0">
                  <svg class="h-6 w-6 text-blue-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4.354a4 4 0 110 5.292M15 21H3v-1a6 6 0 0112 0v1zm0 0h6v-1a6 6 0 00-9-5.197m13.5-9a2.5 2.5 0 11-5 0 2.5 2.5 0 015 0z" />
                  </svg>
                </div>
                <div class="ml-5 w-0 flex-1">
                  <dl>
                    <dt class="text-sm font-medium text-gray-500 truncate">Total Usuarios</dt>
                    <dd class="text-lg font-medium text-gray-900">{totalUsuarios}</dd>
                  </dl>
                </div>
              </div>
            </div>
          </div>

          <!-- Administradores -->
          <div class="bg-white overflow-hidden shadow rounded-lg">
            <div class="p-5">
              <div class="flex items-center">
                <div class="flex-shrink-0">
                  <svg class="h-6 w-6 text-purple-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m5.618-4.016A11.955 11.955 0 0112 2.944a11.955 11.955 0 01-8.618 3.04A12.02 12.02 0 003 9c0 5.591 3.824 10.29 9 11.622 5.176-1.332 9-6.03 9-11.622 0-1.042-.133-2.052-.382-3.016z" />
                  </svg>
                </div>
                <div class="ml-5 w-0 flex-1">
                  <dl>
                    <dt class="text-sm font-medium text-gray-500 truncate">Administradores</dt>
                    <dd class="text-lg font-medium text-gray-900">{usuariosPorRol.admin}</dd>
                  </dl>
                </div>
              </div>
            </div>
          </div>

          <!-- Usuarios Regulares -->
          <div class="bg-white overflow-hidden shadow rounded-lg">
            <div class="p-5">
              <div class="flex items-center">
                <div class="flex-shrink-0">
                  <svg class="h-6 w-6 text-blue-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z" />
                  </svg>
                </div>
                <div class="ml-5 w-0 flex-1">
                  <dl>
                    <dt class="text-sm font-medium text-gray-500 truncate">Usuarios Regulares</dt>
                    <dd class="text-lg font-medium text-gray-900">{usuariosPorRol.user}</dd>
                  </dl>
                </div>
              </div>
            </div>
          </div>
        </div>
        
        <!-- Campo de búsqueda -->
        <div class="mb-6">
          <label for="busqueda" class="block text-sm font-medium text-gray-700">Buscar usuario</label>
          <input
            id="busqueda"
            type="text"
            placeholder="Buscar por nombre, correo o sociedad..."
            class="mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm"
          />
        </div>

        <!-- Tabla de Usuarios -->
        <div class="bg-white shadow overflow-hidden sm:rounded-md">
          <div class="px-4 py-5 sm:px-6 border-b border-gray-200">
            <h3 class="text-lg leading-6 font-medium text-gray-900">
              Lista de Usuarios ({totalUsuarios})
            </h3>
          </div>

          {usuarios.length === 0 ? (
            <div class="text-center py-12">
              <svg
                class="mx-auto h-12 w-12 text-gray-400"
                fill="none"
                viewBox="0 0 24 24"
                stroke="currentColor"
              >
                <path
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  stroke-width="2"
                  d="M12 4.354a4 4 0 110 5.292M15 21H3v-1a6 6 0 0112 0v1zm0 0h6v-1a6 6 0 00-9-5.197m13.5-9a2.5 2.5 0 11-5 0 2.5 2.5 0 015 0z"
                />
              </svg>
              <h3 class="mt-2 text-sm font-medium text-gray-900">No hay usuarios</h3>
              <p class="mt-1 text-sm text-gray-500">Comienza creando un nuevo usuario.</p>
              <div class="mt-6">
                <Button href="/admin/users/create" variant="primary">+ Crear Usuario</Button>
              </div>
            </div>
          ) : (
            <ul class="divide-y divide-gray-200" id="lista-usuarios">
              {usuarios.map((usuario) => (
                <li class="px-4 py-4 sm:px-6">
                  <div class="flex items-center justify-between">
                    <div class="flex items-center space-x-4">
                      <div class="flex-shrink-0">
                        <div class="h-10 w-10 rounded-full bg-gray-300 flex items-center justify-center">
                          <span class="text-sm font-medium text-gray-700 uppercase">
                            {usuario.nombre.charAt(0)}
                          </span>
                        </div>
                      </div>
                      <div class="flex-1 min-w-0">
                        <div class="flex items-center space-x-3">
                          <p class="text-sm font-medium text-gray-900 truncate">
                            {usuario.nombre}
                          </p>
                          <span class={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${
                            usuario.role === 'admin'
                              ? 'bg-purple-100 text-purple-800'
                              : 'bg-blue-100 text-blue-800'
                          }`}>
                            {usuario.role}
                          </span>
                        </div>
                        <div class="flex items-center space-x-4 mt-1">
                          <p class="text-sm text-gray-500">@{usuario.userName}</p>
                          <p class="text-sm text-gray-500">{usuario.correo}</p>
                          <p class="text-sm text-gray-900">
                            {socesMap.get(usuario.socesId) ?? 'No asignado'}
                          </p>
                        </div>
                      </div>
                    </div>
                    <div class="flex items-center space-x-2">
                      <Button href={`/admin/users/${usuario.id}/edit`} variant="outline" size="sm">
                        Editar
                      </Button>
                      {usuario.id !== user.id && (
                        <form action="/api/admin/users/delete" method="POST" class="inline">
                          <input type="hidden" name="userId" value={usuario.id} />
                          <button
                            type="submit"
                            onclick="return confirm('¿Estás seguro de eliminar este usuario?')"
                            class="inline-flex items-center px-3 py-2 border border-red-300 text-sm leading-4 font-medium rounded-md text-red-700 bg-white hover:bg-red-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500"
                          >
                            Eliminar
                          </button>
                        </form>
                      )}
                    </div>
                  </div>
                </li>
              ))}
            </ul>
          )}
        </div>

      </div>
    </main>
  </div>

  <!-- Script para búsqueda en vivo -->
  <script type="module" is:inline>
    const input = document.getElementById('busqueda');
    const lista = document.getElementById('lista-usuarios');

    input?.addEventListener('input', () => {
      const filtro = input.value.toLowerCase();
      const items = lista.querySelectorAll('li');

      items.forEach(item => {
        const textoCompleto = item.innerText.toLowerCase();
        item.style.display = textoCompleto.includes(filtro) ? '' : 'none';
      });
    });
  </script>
</Layout>
