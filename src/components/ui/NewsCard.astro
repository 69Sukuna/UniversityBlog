---
export interface News {
  id?: number;
  titulo: string;
  contenido: string;
  link?: string;
  link2?: string;
  fecha: Date | string;
  userName?: string;
}

const { noticia } = Astro.props;

// Función helper para formatear fecha
const formatearFecha = (fecha: Date | string) => {
  const fechaObj = typeof fecha === 'string' ? new Date(fecha) : fecha;
  return fechaObj.toLocaleDateString('es-ES', {
    year: 'numeric',
    month: 'long',
    day: 'numeric'
  });
};

// Función para extraer ID de Google Drive (MEJORADA)
const extractGoogleDriveId = (url: string): string | null => {
  try {
    const cleanUrl = url.trim();
    //console.log('Extrayendo ID de Google Drive de:', cleanUrl);
    
    // Método 1: /file/d/ID/view, /file/d/ID/edit, etc.
    const fileMatch = cleanUrl.match(/\/file\/d\/([a-zA-Z0-9_-]{25,})/);
    if (fileMatch && fileMatch[1]) {
     // console.log('ID encontrado (método 1):', fileMatch[1]);
      return fileMatch[1];
    }
    
    // Método 2: /open?id=ID
    const openMatch = cleanUrl.match(/\/open\?id=([a-zA-Z0-9_-]{25,})/);
    if (openMatch && openMatch[1]) {
      //console.log('ID encontrado (método 2):', openMatch[1]);
      return openMatch[1];
    }
    
    // Método 3: id=ID en cualquier lugar de la URL
    const idMatch = cleanUrl.match(/[?&]id=([a-zA-Z0-9_-]{25,})/);
    if (idMatch && idMatch[1]) {
     //console.log('ID encontrado (método 3):', idMatch[1]);
      return idMatch[1];
    }
    
    // Método 4: usando URL API para casos complejos
    try {
      const urlObj = new URL(cleanUrl);
      const idParam = urlObj.searchParams.get('id');
      if (idParam && idParam.length >= 25) {
        //console.log('ID encontrado (método 4):', idParam);
        return idParam;
      }
    } catch (e) {
      //console.log('Error parseando URL con new URL():', e);
    }
    
    // Método 5: Para URLs de compartir: https://drive.google.com/file/d/ID/view?usp=sharing
    const shareMatch = cleanUrl.match(/drive\.google\.com\/file\/d\/([a-zA-Z0-9_-]{25,})/);
    if (shareMatch && shareMatch[1]) {
      //console.log('ID encontrado (método 5):', shareMatch[1]);
      return shareMatch[1];
    }

    //console.log('No se pudo extraer ID de Google Drive');
    return null;
    
  } catch (error) {
    //console.error('Error en extractGoogleDriveId:', error);
    return null;
  }
};

// Función para detectar el tipo de enlace y extraer información relevante
const analizarEnlace = (url: string) => {
  if (!url || url.trim() === '') return { tipo: 'ninguno', datos: null };

  try {
    const cleanUrl = url.trim();
   //console.log('Analizando URL:', cleanUrl);
    
    const urlObj = new URL(cleanUrl);
    const hostname = urlObj.hostname.toLowerCase();

    // Google Drive (MEJORADO)
    if (hostname === 'drive.google.com' || hostname.includes('drive.google.com')) {
     // console.log('URL de Google Drive detectada');
      const fileId = extractGoogleDriveId(cleanUrl);
      
      if (fileId) {
        // Crear múltiples URLs para intentar mostrar la imagen
        const directUrl = `https://drive.google.com/uc?export=view&id=${fileId}`;
        const thumbnailUrl = `https://drive.google.com/thumbnail?id=${fileId}&sz=w1000`;
        const alternativeUrl = `https://lh3.googleusercontent.com/d/${fileId}`;

       // console.log('URLs de Google Drive generadas:', {
       //   directUrl,
       //   thumbnailUrl,
       //   alternativeUrl,
       //   fileId
       // });
        
        return {
          tipo: 'imagen',
          datos: { 
            url: directUrl,
            thumbnailUrl: thumbnailUrl,
            alternativeUrl: alternativeUrl,
            originalUrl: cleanUrl,
            fileId: fileId
          }
        };
      } else {
        // Si no se puede extraer el ID, tratarlo como enlace genérico
        return {
          tipo: 'enlace',
          datos: {
            url: cleanUrl,
            domain: 'drive.google.com'
          }
        };
      }
    }

    // YouTube
    if (hostname.includes('youtube.com') || hostname.includes('youtu.be')) {
      let videoId = '';
      
      if (hostname.includes('youtube.com')) {
        videoId = urlObj.searchParams.get('v') || '';
      } else if (hostname.includes('youtu.be')) {
        videoId = urlObj.pathname.slice(1);
      }

      if (videoId) {
        return {
          tipo: 'youtube',
          datos: {
            videoId,
            thumbnail: `https://img.youtube.com/vi/${videoId}/maxresdefault.jpg`,
            embedUrl: `https://www.youtube.com/embed/${videoId}`
          }
        };
      }
    }

    // Twitter/X
    if (hostname.includes('twitter.com') || hostname.includes('x.com')) {
      return {
        tipo: 'twitter',
        datos: {
          url: cleanUrl,
          embedCode: cleanUrl
        }
      };
    }

    // Instagram
    if (hostname.includes('instagram.com')) {
      return {
        tipo: 'instagram',
        datos: {
          url: cleanUrl,
          embedUrl: cleanUrl + 'embed'
        }
      };
    }

    // TikTok
    if (hostname.includes('tiktok.com')) {
      return {
        tipo: 'tiktok',
        datos: {
          url: cleanUrl,
          embedUrl: cleanUrl.replace('/video/', '/embed/')
        }
      };
    }

    // Facebook
    if (hostname.includes('facebook.com')) {
      return {
        tipo: 'facebook',
        datos: {
          url: cleanUrl
        }
      };
    }

    // Verificar si es una imagen directa
    const pathLower = urlObj.pathname.toLowerCase();
    if (pathLower.match(/\.(jpg|jpeg|png|gif|webp|svg|bmp|tiff)$/)) {
      return {
        tipo: 'imagen',
        datos: { url: cleanUrl }
      };
    }

    // Enlace genérico
    return {
      tipo: 'enlace',
      datos: {
        url: cleanUrl,
        domain: hostname.replace('www.', '')
      }
    };

  } catch (error) {
    console.error('Error analizando enlace:', error);
    // Si no es URL válida, intentar como imagen directa
    return {
      tipo: 'imagen',
      datos: { url: url.trim() }
    };
  }
};

// Analizar el enlace principal
const infoEnlace = analizarEnlace(noticia.link || '');

// Analizar enlace secundario si existe
const infoEnlace2 = noticia.link2 ? analizarEnlace(noticia.link2) : { tipo: 'ninguno', datos: null };

// Truncar contenido si es muy largo
const contenidoTruncado = noticia.contenido.length > 500 
  ? noticia.contenido.substring(0, 500) + '...' 
  : noticia.contenido;
---

<article
  class="news-card bg-[#f8f5f0] border border-[#d6c6b8] rounded-xl shadow-lg p-6 flex flex-col h-fit transition-all hover:shadow-2xl hover:-translate-y-1 duration-300 font-serif relative overflow-hidden group"
  role="article"
  aria-labelledby={`news-title-${noticia.id}`}
>
  <!-- Barra decorativa superior -->
  <div
    class="absolute top-0 left-0 w-full h-2 bg-gradient-to-r from-[#c2b280] via-[#e2d3b1] to-[#c2b280] opacity-40 group-hover:opacity-60 transition-opacity duration-300"
    aria-hidden="true"
  ></div>

  <!-- Header con información de la noticia -->
  <header class="mb-4 border-b border-[#d6c6b8] pb-3">
    <h2 
      id={`news-title-${noticia.id}`}
      class="text-2xl font-extrabold text-[#3e2c1c] tracking-wide drop-shadow vintage-title mb-2 line-clamp-2 hover:text-[#2a1f14] transition-colors duration-200"
    >
      {noticia.titulo}
    </h2>
    
    <div class="text-sm text-[#7c6f57] italic flex flex-wrap gap-2 items-center">
      {noticia.userName && (
        <span class="flex items-center gap-1">
          <svg class="w-4 h-4 opacity-70" fill="currentColor" viewBox="0 0 20 20" aria-hidden="true">
            <path fill-rule="evenodd" d="M10 9a3 3 0 100-6 3 3 0 000 6zm-7 9a7 7 0 1114 0H3z" clip-rule="evenodd" />
          </svg>
          Por <span class="font-bold text-[#5a4d3a]">{noticia.userName}</span>
        </span>
      )}
      
      {noticia.fecha && (
        <span class="flex items-center gap-1">
          <svg class="w-4 h-4 opacity-70" fill="currentColor" viewBox="0 0 20 20" aria-hidden="true">
            <path fill-rule="evenodd" d="M6 2a1 1 0 00-1 1v1H4a2 2 0 00-2 2v10a2 2 0 002 2h12a2 2 0 002-2V6a2 2 0 00-2-2h-1V3a1 1 0 10-2 0v1H7V3a1 1 0 00-1-1zm0 5a1 1 0 000 2h8a1 1 0 100-2H6z" clip-rule="evenodd" />
          </svg>
          {formatearFecha(noticia.fecha)}
        </span>
      )}
    </div>
  </header>

  <!-- Previsualización del contenido multimedia -->
  {infoEnlace.tipo !== 'ninguno' && (
    <div class="mb-4 overflow-hidden rounded-lg border border-[#d6c6b8] shadow">
      
      {/* YouTube */}
      {infoEnlace.tipo === 'youtube' && (
        <div class="relative aspect-video bg-black">
          {infoEnlace?.datos?.thumbnail && (
            <img
              src={infoEnlace.datos.thumbnail}
              alt={`Video de YouTube: ${noticia.titulo}`}
              class="w-full h-full object-cover vintage-img cursor-pointer youtube-thumbnail"
              loading="lazy"
              decoding="async"
              onclick={`window.open('${noticia.link}', '_blank')`}
            />
          )}

          <div class="absolute inset-0 flex items-center justify-center">
            <div class="bg-red-600 rounded-full p-3 shadow-lg hover:bg-red-700 transition-colors cursor-pointer"
                 onclick={`window.open('${noticia.link}', '_blank')`}>
              <svg class="w-8 h-8 text-white ml-1" fill="currentColor" viewBox="0 0 24 24">
                <path d="M8 5v14l11-7z"/>
              </svg>
            </div>
          </div>
          <div class="absolute top-2 right-2 bg-black bg-opacity-75 text-white px-2 py-1 rounded text-xs font-medium">
            YouTube
          </div>
        </div>
      )}
      
      {/* Twitter/X */}
      {infoEnlace.tipo === 'twitter' && (
        <div class="bg-gradient-to-br from-blue-50 to-blue-100 p-6 text-center min-h-[200px] flex flex-col justify-center">
          <div class="mb-4">
            <svg class="w-12 h-12 text-blue-500 mx-auto" fill="currentColor" viewBox="0 0 24 24">
              <path d="M23.953 4.57a10 10 0 01-2.825.775 4.958 4.958 0 002.163-2.723c-.951.555-2.005.959-3.127 1.184a4.92 4.92 0 00-8.384 4.482C7.69 8.095 4.067 6.13 1.64 3.162a4.822 4.822 0 00-.666 2.475c0 1.71.87 3.213 2.188 4.096a4.904 4.904 0 01-2.228-.616c-.054 2.385 1.664 4.623 4.092 5.11a4.935 4.935 0 01-2.224.085c.627 1.956 2.444 3.377 4.6 3.417a9.867 9.867 0 01-6.102 2.105c-.396 0-.787-.023-1.17-.067a13.945 13.945 0 007.557 2.209c9.054 0 14-7.496 14-13.986 0-.21 0-.423-.015-.633a9.936 9.936 0 002.457-2.548l-.047-.02z" />
            </svg>
          </div>
          <a
            href={noticia.link}
            target="_blank"
            rel="noopener noreferrer"
            class="text-blue-600 underline hover:text-blue-800 font-semibold"
          >
            Ver en Twitter
          </a>
        </div>
      )}

      {/* Instagram */}
      {infoEnlace.tipo === 'instagram' && (
        <div class="bg-gradient-to-br from-pink-50 to-purple-100 p-6 text-center min-h-[200px] flex flex-col justify-center">
          <div class="mb-4">
            <svg class="w-12 h-12 text-pink-500 mx-auto" fill="currentColor" viewBox="0 0 24 24">
              <path d="M12.017 0C8.396 0 7.989.013 7.041.048 6.094.082 5.52.204 5.015.38a6.275 6.275 0 0 0-2.257 1.526c-.469.5-.804 1.086-1.003 1.732C1.579 4.197 1.456 4.771 1.422 5.718.013 6.666 0 7.073 0 12.017c0 4.944.013 5.35.048 6.298.034.947.156 1.521.332 2.026a6.13 6.13 0 0 0 1.526 2.257 6.096 6.096 0 0 0 2.257 1.003c.505.176 1.079.298 2.026.332.947.035 1.354.048 6.298.048s5.35-.013 6.298-.048c.947-.034 1.521-.156 2.026-.332a6.275 6.275 0 0 0 2.257-1.526 6.097 6.097 0 0 0 1.003-2.257c.176-.505.298-1.079.332-2.026.035-.947.048-1.354.048-6.298s-.013-5.35-.048-6.298c-.034-.947-.156-1.521-.332-2.026a6.097 6.097 0 0 0-1.003-2.257A6.096 6.096 0 0 0 20.023 1.38c-.505-.176-1.079-.298-2.026-.332C17.05.013 16.644 0 12.017 0zm0 2.16c4.8 0 5.37.02 7.264.107.847.038 1.35.181 1.666.301.419.162.72.358 1.036.673.315.315.511.617.673 1.035.12.317.263.82.301 1.667.086 1.894.107 2.463.107 7.264 0 4.8-.02 5.37-.107 7.264-.038.847-.181 1.35-.301 1.666a2.916 2.916 0 0 1-.673 1.036 2.918 2.918 0 0 1-1.035.673c-.317.12-.82.263-1.667.301-1.894.086-2.463.107-7.264.107s-5.37-.02-7.264-.107c-.847-.038-1.35-.181-1.666-.301a2.916 2.916 0 0 1-1.036-.673 2.918 2.918 0 0 1-.673-1.035c-.12-.317-.263-.82-.301-1.667-.086-1.894-.107-2.463-.107-7.264s.02-5.37.107-7.264c.038-.847.181-1.35.301-1.666.162-.419.358-.72.673-1.036.315-.315.617-.511 1.035-.673.317-.12.82-.263 1.667-.301 1.894-.086 2.463-.107 7.264-.107z"/>
              <path d="M12.017 15.33a3.312 3.312 0 1 1 0-6.624 3.312 3.312 0 0 1 0 6.623zm0-8.468a5.156 5.156 0 1 0 0 10.312 5.156 5.156 0 0 0 0-10.312zm6.584-1.293a1.2 1.2 0 1 1-2.4 0 1.2 1.2 0 0 1 2.4 0z"/>
            </svg>
          </div>
          <a
            href={noticia.link}
            target="_blank"
            rel="noopener noreferrer"
            class="text-pink-600 underline hover:text-pink-800 font-semibold"
          >
            Ver en Instagram
          </a>
        </div>
      )}

      {/* TikTok */}
      {infoEnlace.tipo === 'tiktok' && (
        <div class="bg-gradient-to-br from-gray-900 to-red-900 p-6 text-center min-h-[200px] flex flex-col justify-center text-white">
          <div class="mb-4">
            <svg class="w-12 h-12 mx-auto" fill="currentColor" viewBox="0 0 24 24">
              <path d="M19.321 5.562c-.799-.123-1.441-.725-1.699-1.489a3.25 3.25 0 0 1-.123-.869V2h-2.343v13.411c0 1.24-.76 2.343-1.899 2.343-1.24 0-2.244-1.004-2.244-2.244 0-1.239 1.004-2.243 2.244-2.243.245 0 .49.041.717.123V11.1c-.226-.041-.47-.082-.717-.082-2.343 0-4.243 1.899-4.243 4.243S10.914 19.5 13.257 19.5s4.244-1.9 4.244-4.244V8.518c.921.553 2.058.922 3.179.922v-2c0-.04-.04-.081-.04-.122-.799-.04-1.559-.329-2.319-.756z"/>
            </svg>
          </div>
          <a
            href={noticia.link}
            target="_blank"
            rel="noopener noreferrer"
            class="text-white underline hover:text-gray-300 font-semibold"
          >
            Ver en TikTok
          </a>
        </div>
      )}

      {/* Facebook */}
      {infoEnlace.tipo === 'facebook' && (
        <div class="bg-gradient-to-br from-blue-600 to-blue-800 p-6 text-center min-h-[200px] flex flex-col justify-center text-white">
          <div class="mb-4">
            <svg class="w-12 h-12 mx-auto" fill="currentColor" viewBox="0 0 24 24">
              <path d="M24 12.073c0-6.627-5.373-12-12-12s-12 5.373-12 12c0 5.99 4.388 10.954 10.125 11.854v-8.385H7.078v-3.47h3.047V9.43c0-3.007 1.792-4.669 4.533-4.669 1.312 0 2.686.235 2.686.235v2.953H15.83c-1.491 0-1.956.925-1.956 1.874v2.25h3.328l-.532 3.47h-2.796v8.385C19.612 23.027 24 18.062 24 12.073z"/>
            </svg>
          </div>
          <a
            href={noticia.link}
            target="_blank"
            rel="noopener noreferrer"
            class="text-white underline hover:text-blue-300 font-semibold"
          >
            Ver en Facebook
          </a>
        </div>
      )}

      {/* Imagen directa (incluyendo Google Drive) - VERSIÓN MEJORADA */}
      {infoEnlace.tipo === 'imagen' && infoEnlace.datos?.url && (
        <div class="relative">
          <img
            src={infoEnlace.datos.url}
            alt={noticia.titulo}
            loading="lazy"
            decoding="async"
            class="w-full h-auto max-h-96 rounded-md object-cover border border-[#d6c6b8] vintage-img"
            onerror={`
              console.log('Error cargando imagen primaria:', this.src);
              // Intentar con thumbnail de Google Drive
              if (this.src.includes('uc?export=view') && '${infoEnlace.datos?.thumbnailUrl || ''}') {
                console.log('Intentando con thumbnail...');
                this.src = '${infoEnlace.datos.thumbnailUrl}';
              }
              // Intentar con URL alternativa de Google
              else if (this.src.includes('thumbnail') && '${infoEnlace.datos?.alternativeUrl || ''}') {
                console.log('Intentando con URL alternativa...');
                this.src = '${infoEnlace.datos.alternativeUrl}';
              }
              // Si todos fallan, mostrar mensaje de error
              else if (this.src.includes('googleusercontent') || this.src.includes('drive.google.com')) {
                console.log('Todas las URLs de Google Drive fallaron');
                this.parentElement.innerHTML = \`
                  <div class="bg-amber-50 border border-amber-200 rounded-md p-6 text-center min-h-[200px] flex flex-col justify-center">
                    <div class="mb-4">
                      <svg class="w-12 h-12 text-amber-500 mx-auto" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L3.732 16.5c-.77.833.192 2.5 1.732 2.5z"/>
                      </svg>
                    </div>
                    <p class="text-amber-700 font-semibold mb-2">⚠️ Imagen no accesible</p>
                    <p class="text-sm text-amber-600 mb-4">La imagen de Google Drive requiere permisos públicos</p>
                    <a href="${infoEnlace.datos?.originalUrl || ''}" target="_blank" rel="noopener noreferrer" 
                       class="inline-block bg-amber-600 text-white px-4 py-2 rounded hover:bg-amber-700 transition-colors font-semibold">
                      📁 Abrir en Google Drive
                    </a>
                    <p class="text-xs text-amber-500 mt-3">Tip: Asegúrate de que el archivo tenga permisos de "Cualquier persona con el enlace"</p>
                  </div>
                \`;
              }
            `}
          />
          
          <!-- Indicador de Google Drive -->
          {infoEnlace.datos?.fileId && (
            <div class="absolute top-2 right-2 bg-blue-600 bg-opacity-90 text-white px-2 py-1 rounded text-xs font-medium shadow-md">
              📁 Google Drive
            </div>
          )}
          
          <!-- Enlace de respaldo -->
          {infoEnlace.datos?.originalUrl && infoEnlace.datos?.fileId && (
            <div class="absolute bottom-2 right-2">
              <a
                href={infoEnlace.datos.originalUrl}
                target="_blank"
                rel="noopener noreferrer"
                class="bg-black bg-opacity-75 text-white px-3 py-1 rounded text-xs hover:bg-opacity-90 transition-opacity font-medium"
                title="Abrir en Google Drive"
              >
                🔗 Ver original
              </a>
            </div>
          )}
        </div>
      )}

      {/* Enlace genérico */}
      {infoEnlace.tipo === 'enlace' && infoEnlace.datos?.url && (
        <a
          href={infoEnlace.datos.url}
          target="_blank"
          rel="noopener noreferrer"
          class="block p-4 border border-[#d6c6b8] rounded-md bg-[#faf9f8] hover:bg-[#f0eede] text-[#3e2c1c] font-semibold text-center transition-colors duration-200"
          aria-label={`Abrir enlace a ${infoEnlace.datos.domain ?? 'enlace'}`}
        >
          📎 Visitar: {infoEnlace.datos.domain ?? infoEnlace.datos.url}
        </a>
      )}

    </div>
  )}

  <!-- Contenido truncado -->
  <div class="flex-1">
    <p class="mb-4 text-[#5a4d3a] leading-relaxed vintage-content">{contenidoTruncado}</p>
  </div>

  <!-- Enlace secundario (opcional) -->
  {infoEnlace2.tipo !== 'ninguno' && (
    <div class="mt-auto pt-3 border-t border-[#d6c6b8] text-right text-sm">
      <a
        href={noticia.link2}
        target="_blank"
        rel="noopener noreferrer"
        class="text-[#927e62] hover:text-[#5a4d3a] font-semibold underline transition-colors duration-200"
      >
        Más información →
      </a>
    </div>
  )}

</article>

<style>
  .vintage-title {
    text-shadow: 1px 1px 2px rgba(0,0,0,0.1);
  }
  
  .vintage-content {
    text-align: justify;
    line-height: 1.6;
  }
  
  .vintage-img {
    filter: sepia(5%) saturate(1.1) contrast(1.05);
    transition: filter 0.3s ease, transform 0.3s ease;
  }
  
  .vintage-img:hover {
    filter: sepia(0%) saturate(1.2) contrast(1.1);
    transform: scale(1.02);
  }

  .line-clamp-2 {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }

  .news-card:hover .vintage-img {
    transform: scale(1.05);
  }
</style>